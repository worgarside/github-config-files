---
name: '"PR Cleanup" Runner'

on:
  workflow_call:
    inputs:
      head-ref:
        description: "The head branch's name (source branch): `github.head_ref`"
        required: true
        type: string
      pr-label-names:
        description: "The PR's labels: `join(github.event.pull_request.labels.*.name`)"
        required: true
        type: string
      pr-merged:
        description: 'Whether the PR was merged: `github.event.pull_request.merged`'
        required: true
        type: boolean
      pr-number:
        description: 'The PR number: `github.event.pull_request.number`'
        required: true
        type: number
    secrets:
      gh-token:
        description: The GitHub token to use
        required: true

jobs:
  delete-branch:
    name: Delete Branch on PR Merge
    env:
      GITHUB_TOKEN: ${{ secrets.gh-token }}
    if: inputs.pr-merged
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Log Inputs
        if: runner.debug == '1'
        env:
          INPUTS: ${{ toJson(inputs) }}
        run: |
          echo -e "\`\`\`json\n$INPUTS\n\`\`\`" >> "$GITHUB_STEP_SUMMARY"

      - name: Clone Repo
        uses: actions/checkout@v4
        # This is to stop false positives when the branch has already been deleted
        continue-on-error: true
        with:
          ref: ${{ inputs.head-ref }}

      - name: Parse Label Names
        id: parse-label-names
        # yamllint disable rule:line-length
        run: |
          name_list=$(echo "${{ inputs.pr-label-names }}" | jq -R 'split(",")' | tr '\n' ' ' )
          echo "pr-label-name-list=$name_list" >> "$GITHUB_OUTPUT"
        # yamllint enable rule:line-length

      - name: Delete Branch
        continue-on-error: true
        if: |
          success() &&
          (
            contains(
              toJson(steps.parse-label-names.outputs.pr-label-name-list),
              'bot:delete-on-merge'
            ) ||
            !(
              startsWith(inputs.head-ref, 'hotfix/') ||
              startsWith(inputs.head-ref, 'release/') ||
              inputs.head-ref == 'develop' ||
              inputs.head-ref == 'main' ||
              inputs.head-ref == 'master'
            )
          )
        run: git push origin --delete "$GITHUB_HEAD_REF"

  remove-bot-labels:
    name: Remove Bot Command Labels on PR Merge
    if: inputs.pr-merged
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Remove Bot Labels
        env:
          GITHUB_TOKEN: ${{ secrets.gh-token }}
          PR_LABELS: ${{ inputs.pr-label-names }}
        run: |
          bot_labels=$(
            echo "$PR_LABELS" |
              tr ',' '\n' |
              grep -o 'bot:.*' |
              tr '\n' ',' |
              sed 's/,$//'
          )
          echo -e "bot_labels=\`$bot_labels\`" >> "$GITHUB_STEP_SUMMARY"
          if [[ ! -z "$bot_labels" ]]; then
            gh pr edit "${{ inputs.pr-number }}" \
              --repo "${{ github.repository }}" \
              --remove-label "$bot_labels"
          fi
