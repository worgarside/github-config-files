---
name: Get Release Tag

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      branch-name:
        description: The name of the branch to extract the release tag from
        required: false
        type: string
      get-from-current-commit:
        description: Whether to get the release tag from the current commit
        required: false
        type: boolean
      current-commit-timeout:
        description: The timeout for getting the current commit's tag
        required: false
        type: number
        default: 120
    outputs:
      release-tag:
        description: The release tag
        value: ${{ jobs.get-release-tag.outputs.release-tag }}

jobs:
  get-release-tag:
    name: Get Release Tag
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.get-tag.outputs.release-tag }}
    steps:
      - name: Log Inputs
        if: runner.debug == '1'
        env:
          INPUTS: ${{ toJson(inputs) }}
        run: |
          echo -e "\`\`\`json\n$INPUTS\n\`\`\`" >> "$GITHUB_STEP_SUMMARY"

      - name: Clone Repo
        uses: actions/checkout@v4
        if: inputs.get-from-current-commit || !inputs.branch-name
        with:
          fetch-depth: 0
          token: ${{ secrets.WORGARSIDE_DEV_TOKEN }}
          ref: ${{ inputs.branch-name || github.ref }}

      - name: Get Release Tag
        id: get-tag
        env:
          BRANCH_NAME: ${{ inputs.branch-name }}
          GET_FROM_COMMIT: ${{ inputs.get-from-current-commit }}
          GH_TOKEN: ${{ secrets.WORGARSIDE_DEV_TOKEN }}
        # yamllint disable rule:line-length
        run: |
          echo -e "Branch name: \`${BRANCH_NAME}\`" >> "${GITHUB_STEP_SUMMARY}"
          echo -e "Get from current commit: \`${GET_FROM_COMMIT}\`" >> "${GITHUB_STEP_SUMMARY}"

          if [[ "$GET_FROM_COMMIT" == "true" ]]
          then
              TIMEOUT=${{ inputs.current-commit-timeout }}

              echo "Timeout: ${TIMEOUT}s" >> "${GITHUB_STEP_SUMMARY}"

              while [[ "${TIMEOUT}" -gt 0 ]]; do
                  git fetch --tags

                  release_tag=$(git describe --tags --exact-match 2> /dev/null)

                  if [[ -n "${release_tag}" ]]; then
                      echo "Found tag: ${release_tag}" >> "${GITHUB_STEP_SUMMARY}"
                      TIMEOUT=0
                  else
                    TIMEOUT=$((TIMEOUT - 5))
                  fi
                  sleep 5
              done
          elif [[ -z "$BRANCH_NAME" ]]
          then
              release_tag=$(gh release view --json tagName --jq '.tagName')
          else
              release_tag=$(
                echo "$BRANCH_NAME" | awk -F'/' '{
                  for(i=1; i<=NF; ++i) {
                    if($i ~ /^[0-9]+\.[0-9]+\.[0-9]+$/) {
                      print $i;
                    }
                  }
                }'
              )
          fi

          if ! [[ $release_tag =~ ^[0-9]{1,2}\.[0-9]{1,4}\.[0-9]{1,4}$ ]]
          then
            echo "Release tag is bollocks: \`$release_tag\` ðŸ˜¡" >> "$GITHUB_STEP_SUMMARY"
            exit 1
          fi

          echo "release-tag=$release_tag" >> "$GITHUB_OUTPUT"
        # yamllint enable rule:line-length
