---
name: Draft Release

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      base-ref-name:
        description: The base ref name to use for the PR
        required: true
        type: string
      head-ref-name:
        description: The head ref name to use for the PR
        required: true
        type: string
      publish-to-test-pypi:
        default: false
        description: Whether to publish to Test PyPI
        required: false
        type: boolean
    secrets:
      gh-token:
        description: The GitHub token to use for the workflow
        required: true
      PYPI_API_TOKEN:
        description: The Test PyPi token to use for the workflow
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  log-inputs:
    name: Log Inputs
    runs-on: ubuntu-latest
    steps:
      - name: Log Inputs
        if: runner.debug == '1'
        env:
          INPUTS: ${{ toJson(inputs) }}
        run: |
          echo -e "\`\`\`json\n$INPUTS\n\`\`\`" >> "$GITHUB_STEP_SUMMARY"

  get-release-tag:
    name: Get Release Tag
    uses: ./.github/workflows/__get_release_tag.yml
    with:
      branch-name: ${{ inputs.head-ref-name }}

  create-pr:
    name: Create PR
    needs:
      - get-release-tag
    # yamllint disable rule:line-length
    uses: worgarside/github-config-files/.github/workflows/__create_pull_request.yml@main
    with:
      base-ref-name: ${{ inputs.base-ref-name }}
      head-ref-name: ${{ inputs.head-ref-name }}
      pr-title: Release ${{ needs.get-release-tag.outputs.release-tag }}
      pr-draft: false
      update-pr-body-if-exists: true
      pr-labels: release
    secrets:
      gh-token: ${{ secrets.gh-token }}

  draft-release:
    name: Draft Release
    needs:
      - get-release-tag
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.head-ref-name }}

      - name: Validate `pyproject.toml` version
        # yamllint disable rule:line-length
        run: |
          expected_line="version = \"${{ needs.get-release-tag.outputs.release-tag }}\""
          actual_line=$(grep -E "^version = \"" pyproject.toml)
          if [ "$expected_line" != "$actual_line" ]
          then
              echo "\`pyproject.toml\` version is invalid: \`$actual_line\`" >> "$GITHUB_STEP_SUMMARY"
              exit 1
          fi
        # yamllint enable rule:line-length

      - name: Draft Release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.gh-token }}

  publish-to-test-pypi:
    name: Publish to Test PyPi
    if: inputs.publish-to-test-pypi
    uses: ./.github/workflows/__build_and_publish.yml
    needs:
      - get-release-tag
    with:
      build-branch: ${{ inputs.head-ref-name }}
      environment: development
      python-version: '3.11'
      release-tag: ${{ needs.get-release-tag.outputs.release-tag }}
    secrets:
      gh-token: ${{ secrets.gh-token }}
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
